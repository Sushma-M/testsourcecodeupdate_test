/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testservice.adventureworks2014.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import java.util.Date;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;
import com.wavemaker.runtime.data.export.ExportType;
import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.file.model.Downloadable;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;
import com.wordnik.swagger.annotations.ApiOperation;
import com.wordnik.swagger.annotations.ApiParam;
import com.testservice.adventureworks2014.VemployeeDepartmentHistory;
import com.testservice.adventureworks2014.VemployeeDepartmentHistoryId;
import com.testservice.adventureworks2014.service.VemployeeDepartmentHistoryService;

/**
 * Controller object for domain model class VemployeeDepartmentHistory.
 * @see VemployeeDepartmentHistory
 */
@RestController("AdventureWorks2014.VemployeeDepartmentHistoryController")
@Api(value = "VemployeeDepartmentHistoryController", description = "Exposes APIs to work with VemployeeDepartmentHistory resource.")
@RequestMapping("/AdventureWorks2014/VemployeeDepartmentHistory")
public class VemployeeDepartmentHistoryController {

    private static final Logger LOGGER = LoggerFactory.getLogger(VemployeeDepartmentHistoryController.class);

    @Autowired
    @Qualifier("AdventureWorks2014.VemployeeDepartmentHistoryService")
    private VemployeeDepartmentHistoryService vemployeeDepartmentHistoryService;

    @ApiOperation(value = "Returns the VemployeeDepartmentHistory instance associated with the given composite-id.")
    @RequestMapping(value = "/composite-id", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public VemployeeDepartmentHistory getVemployeeDepartmentHistory(@RequestParam("businessEntityId") Integer businessEntityId, @RequestParam("title") String title, @RequestParam("firstName") String firstName, @RequestParam("middleName") String middleName, @RequestParam("lastName") String lastName, @RequestParam("suffix") String suffix, @RequestParam("shift") String shift, @RequestParam("department") String department, @RequestParam("groupName") String groupName, @RequestParam("startDate") Date startDate, @RequestParam("endDate") Date endDate) throws EntityNotFoundException {
        VemployeeDepartmentHistoryId vemployeedepartmenthistoryId = new VemployeeDepartmentHistoryId();
        vemployeedepartmenthistoryId.setBusinessEntityId(businessEntityId);
        vemployeedepartmenthistoryId.setTitle(title);
        vemployeedepartmenthistoryId.setFirstName(firstName);
        vemployeedepartmenthistoryId.setMiddleName(middleName);
        vemployeedepartmenthistoryId.setLastName(lastName);
        vemployeedepartmenthistoryId.setSuffix(suffix);
        vemployeedepartmenthistoryId.setShift(shift);
        vemployeedepartmenthistoryId.setDepartment(department);
        vemployeedepartmenthistoryId.setGroupName(groupName);
        vemployeedepartmenthistoryId.setStartDate(startDate);
        vemployeedepartmenthistoryId.setEndDate(endDate);
        LOGGER.debug("Getting VemployeeDepartmentHistory with id: {}", vemployeedepartmenthistoryId);
        VemployeeDepartmentHistory vemployeeDepartmentHistory = vemployeeDepartmentHistoryService.getById(vemployeedepartmenthistoryId);
        LOGGER.debug("VemployeeDepartmentHistory details with id: {}", vemployeeDepartmentHistory);
        return vemployeeDepartmentHistory;
    }

    /**
     * @deprecated Use {@link #findVemployeeDepartmentHistories(String, Pageable)} instead.
     */
    @Deprecated
    @ApiOperation(value = "Returns the list of VemployeeDepartmentHistory instances matching the search criteria.")
    @RequestMapping(value = "/search", method = RequestMethod.POST)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Page<VemployeeDepartmentHistory> findVemployeeDepartmentHistories(Pageable pageable, @RequestBody QueryFilter[] queryFilters) {
        LOGGER.debug("Rendering VemployeeDepartmentHistories list");
        return vemployeeDepartmentHistoryService.findAll(queryFilters, pageable);
    }

    @ApiOperation(value = "Returns the list of VemployeeDepartmentHistory instances matching the search criteria.")
    @RequestMapping(method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Page<VemployeeDepartmentHistory> findVemployeeDepartmentHistories(@ApiParam("conditions to filter the results") @RequestParam(value = "q", required = false) String query, Pageable pageable) {
        LOGGER.debug("Rendering VemployeeDepartmentHistories list");
        return vemployeeDepartmentHistoryService.findAll(query, pageable);
    }

    @ApiOperation(value = "Returns downloadable file for the data.")
    @RequestMapping(value = "/export/{exportType}", method = RequestMethod.GET, produces = "application/octet-stream")
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Downloadable exportVemployeeDepartmentHistories(@PathVariable("exportType") ExportType exportType, @ApiParam("conditions to filter the results") @RequestParam(value = "q", required = false) String query, Pageable pageable) {
        return vemployeeDepartmentHistoryService.export(exportType, query, pageable);
    }

    @ApiOperation(value = "Returns the total count of VemployeeDepartmentHistory instances.")
    @RequestMapping(value = "/count", method = RequestMethod.GET)
    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    public Long countVemployeeDepartmentHistories(@ApiParam("conditions to filter the results") @RequestParam(value = "q", required = false) String query) {
        LOGGER.debug("counting VemployeeDepartmentHistories");
        return vemployeeDepartmentHistoryService.count(query);
    }

    /**
	 * This setter method should only be used by unit tests
	 *
	 * @param service VemployeeDepartmentHistoryService instance
	 */
    protected void setVemployeeDepartmentHistoryService(VemployeeDepartmentHistoryService service) {
        this.vemployeeDepartmentHistoryService = service;
    }
}
